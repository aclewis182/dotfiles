color ir_black

" Allow AngularJS directives in HTML (appease Tidy HTML lint)
let g:syntastic_html_tidy_ignore_errors = ['proprietary attribute "ng-']

" Set Syntastic to use multiple JavaScript checkers
let g:syntastic_javascript_checkers = ['jshint', 'jscs']

" Activate mustache/handlebars abbreviations
let g:mustache_abbreviations = 1
let g:syntastic_filetype_map = { "handlebars.html": "handlebars"}
let g:syntastic_filetype_map = { "html.handlebars": "handlebars"}

" Add a space after NERDcomment
let g:NERDSpaceDelims=1

" Enable json filetype for syntastic and syntax highlighting
au BufRead,BufNewFile *.json set filetype=json
au BufRead,BufNewFile .jscsrc set filetype=json
au BufRead,BufNewFile .jshintrc set filetype=json
au BufRead,BufNewFile .bowerrc set filetype=json

" Setup ~ to toggle lower case, UPPER CASE, and Title Case
function! TwiddleCase(str)
  if a:str ==# toupper(a:str)
    let result = tolower(a:str)
  elseif a:str ==# tolower(a:str)
    let result = substitute(a:str,'\(\<\w\+\>\)', '\u\1', 'g')
  else
    let result = toupper(a:str)
  endif
  return result
endfunction
vnoremap ~ y:call setreg('', TwiddleCase(@"), getregtype(''))<CR>gv""Pgv

" Use the Silver Searcher for CtrlP
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor
  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" Go related changes per Mike Perham
" http://www.mikeperham.com/2014/10/15/stupid-go-tricks-in-janus/
au FileType go nmap <leader>c <Plug>(go-coverage)
au FileType go nmap gd <Plug>(go-def)
au FileType go nmap <leader>r <Plug>(go-rename)

" format with goimports instead of gofmt
" Source: https://robots.thoughtbot.com/writing-go-in-vim
let g:go_fmt_command = "goimports"

let g:tagbar_type_go = {
    \ 'ctagstype' : 'go',
    \ 'kinds'     : [
        \ 'p:package',
        \ 'i:imports:1',
        \ 'c:constants',
        \ 'v:variables',
        \ 't:types',
        \ 'n:interfaces',
        \ 'w:fields',
        \ 'e:embedded',
        \ 'm:methods',
        \ 'r:constructor',
        \ 'f:functions'
    \ ],
    \ 'sro' : '.',
    \ 'kind2scope' : {
        \ 't' : 'ctype',
        \ 'n' : 'ntype'
    \ },
    \ 'scope2kind' : {
        \ 'ctype' : 't',
        \ 'ntype' : 'n'
    \ },
    \ 'ctagsbin'  : 'gotags',
    \ 'ctagsargs' : '-sort -silent'
\ }
